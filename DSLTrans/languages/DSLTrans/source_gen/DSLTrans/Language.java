package DSLTrans;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.smodel.runtime.ILanguageAspect;
import jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import DSLTrans.editor.EditorAspectDescriptorImpl;
import jetbrains.mps.smodel.runtime.StructureAspectDescriptor;
import jetbrains.mps.text.rt.TextGenAspectDescriptor;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "4e1e6c63-3ef5-4d3d-b04d-0e2974d639e7(DSLTrans)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "DSLTrans";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("4e1e6c63-3ef5-4d3d-b04d-0e2974d639e7"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{"transfverif.core"};
  }
  @Override
  public Collection<TemplateModule> getGenerators() {
    return TemplateUtil.<TemplateModule>asCollection(TemplateUtil.createInterpretedGenerator(this, "31554378-4100-4b01-9074-0c0b4c7f8712(DSLTrans#7049464676098566932)"));
  }
  @Override
  protected <T extends ILanguageAspect> T createAspect(Class<T> aspectClass) {
    if (aspectClass == ConstraintsAspectDescriptor.class) {
      return (T) new DSLTrans.constraints.ConstraintsAspectDescriptor();
    }
    if (aspectClass == EditorAspectDescriptor.class) {
      return (T) new EditorAspectDescriptorImpl();
    }
    if (aspectClass == StructureAspectDescriptor.class) {
      return (T) new DSLTrans.structure.StructureAspectDescriptor();
    }
    if (aspectClass == TextGenAspectDescriptor.class) {
      return (T) new DSLTrans.textGen.TextGenAspectDescriptor();
    }
    return super.createAspect(aspectClass);
  }
}
