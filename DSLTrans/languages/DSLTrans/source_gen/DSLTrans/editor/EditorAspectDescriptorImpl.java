package DSLTrans.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Collections;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = ((SAbstractConcept) concept);
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x51706dc3bd019bb1L, "DSLTrans.structure.ApplyModel"))) {
        return Collections.<ConceptEditor>singletonList(new ApplyModel_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d768L, "DSLTrans.structure.Layer"))) {
        return Collections.<ConceptEditor>singletonList(new Layer_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x51706dc3bd019bb0L, "DSLTrans.structure.MatchModel"))) {
        return Collections.<ConceptEditor>singletonList(new MatchModel_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d6dfL, "DSLTrans.structure.Rule"))) {
        return Collections.<ConceptEditor>singletonList(new Rule_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x6bd1e03dbfc8b3cfL, "DSLTrans.structure.Transformation"))) {
        return Collections.<ConceptEditor>singletonList(new Transformation_Editor());
      }
    }
    return Collections.<ConceptEditor>emptyList();
  }



}
