package DSLTrans.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptApplyModel = new ConceptDescriptorBuilder("DSLTrans.structure.ApplyModel", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x51706dc3bd019bb1L)).super_("transfverif.core.structure.AbstractApplier").super_(MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e3L)).parents("transfverif.core.structure.AbstractApplier").parentIds(MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e3L)).create();
  /*package*/ final ConceptDescriptor myConceptIndirectApplyLink = new ConceptDescriptorBuilder("DSLTrans.structure.IndirectApplyLink", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d75cL)).super_("transfverif.core.structure.ApplyLink").super_(MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d762L)).parents("transfverif.core.structure.ApplyLink").parentIds(MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d762L)).create();
  /*package*/ final ConceptDescriptor myConceptLayer = new ConceptDescriptorBuilder("DSLTrans.structure.Layer", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d768L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(3828633282163103595L, "rules", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d6dfL), true, false, false)).children(new String[]{"rules"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptMatchModel = new ConceptDescriptorBuilder("DSLTrans.structure.MatchModel", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x51706dc3bd019bb0L)).super_("transfverif.core.structure.AbstractMatcher").super_(MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x61d4bac5f384b645L)).parents("transfverif.core.structure.AbstractMatcher").parentIds(MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x61d4bac5f384b645L)).create();
  /*package*/ final ConceptDescriptor myConceptPreviousLayer = new ConceptDescriptorBuilder("DSLTrans.structure.PreviousLayer", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d773L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(7769237388006044581L, "source", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d768L), false), new ConceptDescriptorBuilder.Ref(7769237388006044585L, "target", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d768L), false)).references("source", "target").create();
  /*package*/ final ConceptDescriptor myConceptRule = new ConceptDescriptorBuilder("DSLTrans.structure.Rule", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d6dfL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(7049464676098553435L, "matchModel", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e2L), true, false, false), new ConceptDescriptorBuilder.Link(7049464676098553437L, "applyModel", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e3L), false, false, false)).children(new String[]{"matchModel", "applyModel"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptTransformation = new ConceptDescriptorBuilder("DSLTrans.structure.Transformation", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x6bd1e03dbfc8b3cfL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(5868311001920760136L, "inputLanguage", MetaIdFactory.conceptId(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979ba0450L), false)).references("inputLanguage").childDescriptors(new ConceptDescriptorBuilder.Link(7769237388006044628L, "layer", MetaIdFactory.conceptId(0x4e1e6c633ef54d3dL, 0xb04d0e2974d639e7L, 0x352209af6691d768L), true, true, false)).children(new String[]{"layer"}, new boolean[]{true}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptApplyModel, myConceptIndirectApplyLink, myConceptLayer, myConceptMatchModel, myConceptPreviousLayer, myConceptRule, myConceptTransformation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0l, conceptFqName)) {
      case 0:
        return myConceptApplyModel;
      case 1:
        return myConceptIndirectApplyLink;
      case 2:
        return myConceptLayer;
      case 3:
        return myConceptMatchModel;
      case 4:
        return myConceptPreviousLayer;
      case 5:
        return myConceptRule;
      case 6:
        return myConceptTransformation;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0l = new String[]{"DSLTrans.structure.ApplyModel", "DSLTrans.structure.IndirectApplyLink", "DSLTrans.structure.Layer", "DSLTrans.structure.MatchModel", "DSLTrans.structure.PreviousLayer", "DSLTrans.structure.Rule", "DSLTrans.structure.Transformation"};
}
