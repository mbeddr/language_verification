package DSLTrans.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptApplyElement = new ConceptDescriptorBuilder("DSLTrans.structure.ApplyElement", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(3828633282163103469L, "applyElements", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e5L), false, true, false)).children(new String[]{"applyElements"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptApplyLink = new ConceptDescriptorBuilder("DSLTrans.structure.ApplyLink", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d762L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(7769237388006044609L, "source", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e5L), false), new ConceptDescriptorBuilder.Ref(7769237388006044613L, "target", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e5L), false)).references("source", "target").create();
  /*package*/ final ConceptDescriptor myConceptApplyModel = new ConceptDescriptorBuilder("DSLTrans.structure.ApplyModel", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e3L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).create();
  /*package*/ final ConceptDescriptor myConceptBackwardLink = new ConceptDescriptorBuilder("DSLTrans.structure.BackwardLink", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d76dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(7769237388006044595L, "source", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e5L), false), new ConceptDescriptorBuilder.Ref(7769237388006044599L, "target", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e5L), false)).references("source", "target").create();
  /*package*/ final ConceptDescriptor myConceptDirectMatchLink = new ConceptDescriptorBuilder("DSLTrans.structure.DirectMatchLink", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d74fL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(7769237388006044559L, "source", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e4L), false), new ConceptDescriptorBuilder.Ref(7769237388006044564L, "taregt", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e4L), false)).references("source", "taregt").create();
  /*package*/ final ConceptDescriptor myConceptIndirectMatchLink = new ConceptDescriptorBuilder("DSLTrans.structure.IndirectMatchLink", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d75cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(7769237388006044567L, "source", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e4L), false), new ConceptDescriptorBuilder.Ref(7769237388006044571L, "target", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e5L), false)).references("source", "target").create();
  /*package*/ final ConceptDescriptor myConceptLayer = new ConceptDescriptorBuilder("DSLTrans.structure.Layer", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d768L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(3828633282163103595L, "rules", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6dfL), true, false, false)).children(new String[]{"rules"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptMatchElement = new ConceptDescriptorBuilder("DSLTrans.structure.MatchElement", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e4L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).create();
  /*package*/ final ConceptDescriptor myConceptMatchModel = new ConceptDescriptorBuilder("DSLTrans.structure.MatchModel", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e2L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(3828633282163103467L, "matchElements", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e4L), true, true, false)).children(new String[]{"matchElements"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptPreviousLayer = new ConceptDescriptorBuilder("DSLTrans.structure.PreviousLayer", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d773L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(7769237388006044581L, "source", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d768L), false), new ConceptDescriptorBuilder.Ref(7769237388006044585L, "target", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d768L), false)).references("source", "target").create();
  /*package*/ final ConceptDescriptor myConceptRule = new ConceptDescriptorBuilder("DSLTrans.structure.Rule", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6dfL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(3828633282163103462L, "matchElement", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e2L), false, false, false), new ConceptDescriptorBuilder.Link(3828633282163103464L, "applyModel", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d6e3L), false, false, false)).children(new String[]{"matchElement", "applyModel"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptTransformation = new ConceptDescriptorBuilder("DSLTrans.structure.Transformation", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x6bd1e03dbfc8b3cfL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(7769237388006044628L, "layer", MetaIdFactory.conceptId(0xa2c7a1ebb3b54bbbL, 0x819be25a3c6de3a8L, 0x352209af6691d768L), true, true, false)).children(new String[]{"layer"}, new boolean[]{true}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptApplyElement, myConceptApplyLink, myConceptApplyModel, myConceptBackwardLink, myConceptDirectMatchLink, myConceptIndirectMatchLink, myConceptLayer, myConceptMatchElement, myConceptMatchModel, myConceptPreviousLayer, myConceptRule, myConceptTransformation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0q, conceptFqName)) {
      case 0:
        return myConceptApplyElement;
      case 1:
        return myConceptApplyLink;
      case 2:
        return myConceptApplyModel;
      case 3:
        return myConceptBackwardLink;
      case 4:
        return myConceptDirectMatchLink;
      case 5:
        return myConceptIndirectMatchLink;
      case 6:
        return myConceptLayer;
      case 7:
        return myConceptMatchElement;
      case 8:
        return myConceptMatchModel;
      case 9:
        return myConceptPreviousLayer;
      case 10:
        return myConceptRule;
      case 11:
        return myConceptTransformation;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0q = new String[]{"DSLTrans.structure.ApplyElement", "DSLTrans.structure.ApplyLink", "DSLTrans.structure.ApplyModel", "DSLTrans.structure.BackwardLink", "DSLTrans.structure.DirectMatchLink", "DSLTrans.structure.IndirectMatchLink", "DSLTrans.structure.Layer", "DSLTrans.structure.MatchElement", "DSLTrans.structure.MatchModel", "DSLTrans.structure.PreviousLayer", "DSLTrans.structure.Rule", "DSLTrans.structure.Transformation"};
}
